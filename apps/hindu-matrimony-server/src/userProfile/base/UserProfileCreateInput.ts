/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsOptional,
  ValidateNested,
  IsString,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { CommunityWhereUniqueInput } from "../../community/base/CommunityWhereUniqueInput";
import { EnumUserProfileGender } from "./EnumUserProfileGender";
import { MatchCreateNestedManyWithoutUserProfilesInput } from "./MatchCreateNestedManyWithoutUserProfilesInput";
import { PreferencesWhereUniqueInput } from "../../preferences/base/PreferencesWhereUniqueInput";

@InputType()
class UserProfileCreateInput {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  birthDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => CommunityWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CommunityWhereUniqueInput)
  @IsOptional()
  @Field(() => CommunityWhereUniqueInput, {
    nullable: true,
  })
  community?: CommunityWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  fullName?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumUserProfileGender,
  })
  @IsEnum(EnumUserProfileGender)
  @IsOptional()
  @Field(() => EnumUserProfileGender, {
    nullable: true,
  })
  gender?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => MatchCreateNestedManyWithoutUserProfilesInput,
  })
  @ValidateNested()
  @Type(() => MatchCreateNestedManyWithoutUserProfilesInput)
  @IsOptional()
  @Field(() => MatchCreateNestedManyWithoutUserProfilesInput, {
    nullable: true,
  })
  matches?: MatchCreateNestedManyWithoutUserProfilesInput;

  @ApiProperty({
    required: false,
    type: () => PreferencesWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PreferencesWhereUniqueInput)
  @IsOptional()
  @Field(() => PreferencesWhereUniqueInput, {
    nullable: true,
  })
  preferences?: PreferencesWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  religion?: string | null;
}

export { UserProfileCreateInput as UserProfileCreateInput };
