/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { CommunityWhereUniqueInput } from "../../community/base/CommunityWhereUniqueInput";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { EnumUserProfileGender } from "./EnumUserProfileGender";
import { StringFilter } from "../../util/StringFilter";
import { MatchListRelationFilter } from "../../match/base/MatchListRelationFilter";
import { PreferencesWhereUniqueInput } from "../../preferences/base/PreferencesWhereUniqueInput";

@InputType()
class UserProfileWhereInput {
  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  birthDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => CommunityWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CommunityWhereUniqueInput)
  @IsOptional()
  @Field(() => CommunityWhereUniqueInput, {
    nullable: true,
  })
  community?: CommunityWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  fullName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumUserProfileGender,
  })
  @IsEnum(EnumUserProfileGender)
  @IsOptional()
  @Field(() => EnumUserProfileGender, {
    nullable: true,
  })
  gender?: "Option1";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => MatchListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MatchListRelationFilter)
  @IsOptional()
  @Field(() => MatchListRelationFilter, {
    nullable: true,
  })
  matches?: MatchListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PreferencesWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PreferencesWhereUniqueInput)
  @IsOptional()
  @Field(() => PreferencesWhereUniqueInput, {
    nullable: true,
  })
  preferences?: PreferencesWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  religion?: StringNullableFilter;
}

export { UserProfileWhereInput as UserProfileWhereInput };
