/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumPreferencesAgeRange } from "./EnumPreferencesAgeRange";
import { IsEnum, IsOptional, ValidateNested } from "class-validator";
import { CommunityWhereUniqueInput } from "../../community/base/CommunityWhereUniqueInput";
import { Type } from "class-transformer";
import { EnumPreferencesGenderPreference } from "./EnumPreferencesGenderPreference";
import { StringFilter } from "../../util/StringFilter";
import { JsonFilter } from "../../util/JsonFilter";
import { UserProfileListRelationFilter } from "../../userProfile/base/UserProfileListRelationFilter";

@InputType()
class PreferencesWhereInput {
  @ApiProperty({
    required: false,
    enum: EnumPreferencesAgeRange,
  })
  @IsEnum(EnumPreferencesAgeRange)
  @IsOptional()
  @Field(() => EnumPreferencesAgeRange, {
    nullable: true,
  })
  ageRange?: "Option1";

  @ApiProperty({
    required: false,
    type: () => CommunityWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CommunityWhereUniqueInput)
  @IsOptional()
  @Field(() => CommunityWhereUniqueInput, {
    nullable: true,
  })
  community?: CommunityWhereUniqueInput;

  @ApiProperty({
    required: false,
    enum: EnumPreferencesGenderPreference,
  })
  @IsEnum(EnumPreferencesGenderPreference)
  @IsOptional()
  @Field(() => EnumPreferencesGenderPreference, {
    nullable: true,
  })
  genderPreference?: "Option1";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  otherPreferences?: JsonFilter;

  @ApiProperty({
    required: false,
    type: () => UserProfileListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserProfileListRelationFilter)
  @IsOptional()
  @Field(() => UserProfileListRelationFilter, {
    nullable: true,
  })
  userProfiles?: UserProfileListRelationFilter;
}

export { PreferencesWhereInput as PreferencesWhereInput };
