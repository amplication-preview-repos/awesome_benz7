datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model UserProfile {
  birthDate     DateTime?
  community     Community?             @relation(fields: [communityId], references: [id])
  communityId   String?
  createdAt     DateTime               @default(now())
  fullName      String?
  gender        EnumUserProfileGender?
  id            String                 @id @default(cuid())
  matches       Match[]
  preferences   Preferences?           @relation(fields: [preferencesId], references: [id])
  preferencesId String?
  religion      String?
  updatedAt     DateTime               @updatedAt
}

model Match {
  createdAt      DateTime     @default(now())
  id             String       @id @default(cuid())
  matchedAt      DateTime?
  matchedProfile String?
  updatedAt      DateTime     @updatedAt
  userProfile    UserProfile? @relation(fields: [userProfileId], references: [id])
  userProfileId  String?
}

model Preferences {
  ageRange         EnumPreferencesAgeRange?
  community        Community?                       @relation(fields: [communityId], references: [id])
  communityId      String?
  createdAt        DateTime                         @default(now())
  genderPreference EnumPreferencesGenderPreference?
  id               String                           @id @default(cuid())
  otherPreferences Json?
  updatedAt        DateTime                         @updatedAt
  userProfiles     UserProfile[]
}

model Community {
  communityName    String?
  createdAt        DateTime      @default(now())
  id               String        @id @default(cuid())
  preferencesItems Preferences[]
  updatedAt        DateTime      @updatedAt
  userProfiles     UserProfile[]
}

model Communication {
  createdAt       DateTime  @default(now())
  id              String    @id @default(cuid())
  message         String?
  receiverProfile String?
  senderProfile   String?
  sentAt          DateTime?
  updatedAt       DateTime  @updatedAt
}

enum EnumUserProfileGender {
  Option1
}

enum EnumPreferencesAgeRange {
  Option1
}

enum EnumPreferencesGenderPreference {
  Option1
}
